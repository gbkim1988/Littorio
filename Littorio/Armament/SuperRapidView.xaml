<UserControl x:Class="Littorio.Armament.SuperRapidView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Littorio.Armament"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <!-- 
                ColumnDefinition 태그를 통해 칼럼의 갯수를 지정 가능
                
                Whois 검색 툴은 두개의 Column 만 필요함
            -->
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Label Content="Query .... " FontSize="14" Margin="10,0,10,1"/>
            <TextBox Text="{Binding Query}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="15" Margin="10,30,100,0" />
            <Button Command="{Binding CountUrlBytesCommand}" Content="Go" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,30,10,0" Width="75" Height="16"/>
            <ItemsControl ItemsSource="{Binding Operations}" Margin="10,40,10,0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <!--Busy indicator-->
                            <Label Content="{Binding LoadingMessage}" Visibility="{Binding Command.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <!--Results-->
                            <Label Content="{Binding Command.Execution.Result}" Visibility="{Binding Command.Execution.IsSuccessfullyCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <!--Error details-->
                            <Label Content="{Binding Command.Execution.ErrorMessage}" Visibility="{Binding Command.Execution.IsFaulted, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="Red" />
                            <!--Canceled-->
                            <Label Content="Canceled" Visibility="{Binding Command.Execution.IsCanceled, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="Blue" />
                            <Button Command="{Binding Command.CancelCommand}" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Center" Width="75" Margin="0,0,30,0"/>
                            <Button Command="{Binding RemoveCommand}" Content="X" HorizontalAlignment="Right" VerticalAlignment="Center" Width="25"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
        <Grid Grid.Column="2" >
            <StackPanel>
            <DataGrid x:Name="MetroDataGrid"
                  
                  HeadersVisibility="All"
                  ItemsSource="{Binding Path=Albums}"
                  SelectionUnit="FullRow"
                  FontSize="14">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="IsSelected" />
                    <DataGridTextColumn Binding="{Binding Title}" Header="Title" />
                    <DataGridTextColumn Binding="{Binding Artist.Name}" Header="Artist" />
                    <DataGridTextColumn Binding="{Binding Genre.Name}" Header="Genre" />
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground" Value="{DynamicResource GrayBrush10}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.RowStyle>
                    <Style BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}">
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
